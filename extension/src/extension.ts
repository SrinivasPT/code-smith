import * as vscode from "vscode";
import * as fs from "fs";
import * as path from "path";

export function activate(context: vscode.ExtensionContext) {
	context.subscriptions.push(
		vscode.commands.registerCommand("codesmith.open", () => {
			const panel = vscode.window.createWebviewPanel("codesmith", "CodeSmith", vscode.ViewColumn.One, {
				enableScripts: true,
			});

			// Find the actual asset filenames generated by Vite
			const assetsPath = path.join(context.extensionPath, "webview", "dist", "assets");
			const jsFile = fs.readdirSync(assetsPath).find((f: string) => /^index.*\.js$/.test(f));
			const cssFile = fs.readdirSync(assetsPath).find((f: string) => /^index.*\.css$/.test(f));

			const scriptUri = panel.webview.asWebviewUri(vscode.Uri.file(path.join(assetsPath, jsFile ?? "index.js")));

			// Read CSS content for inlining
			let cssContent = "";
			if (cssFile) {
				const cssFilePath = path.join(assetsPath, cssFile);
				cssContent = fs.readFileSync(cssFilePath, "utf8");
			}

			panel.webview.html = getWebviewContent(scriptUri, cssContent);

			panel.webview.onDidReceiveMessage((msg) => {
				switch (msg.type) {
					case "refine":
						vscode.window.showInformationMessage("Refine clicked!");
						break;
				}
			});
		})
	);
}

function getWebviewContent(scriptUri: vscode.Uri, cssContent: string) {
	return `<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <style>${cssContent}</style>
  </head>
  <body>
    <div id="root"></div>
    <script src="${scriptUri}"></script>
  </body>
</html>`;
}
